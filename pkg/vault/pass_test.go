package vault

import (
	"github.com/stretchr/testify/assert"
	"testing"
)

var testPassword = []byte("test-password")
var testSalt = []byte("test-salt")
var expectedKey = key{
	aesKey: []byte{0x20, 0xb3, 0xc, 0x92, 0x34, 0xc1, 0x97, 0x8f, 0x33, 0xc, 0xe4, 0x9d, 0x47, 0x23, 0x85, 0x41, 0xe2, 0x2f, 0x5a, 0xcc, 0x77, 0x6f, 0xd5, 0x8f, 0x66, 0x4a, 0x55, 0xf4, 0x70, 0xa4, 0xa5, 0x52},
	iv:     []byte{0xd4, 0x69, 0xa8, 0xde, 0x62, 0xb9, 0x54, 0xab, 0xb, 0x6b, 0x75, 0x9c},
}

func Test_deriveKey(t *testing.T) {
	key := deriveKey(testPassword, testSalt)

	assert.Len(t, key.aesKey, keyLength)
	assert.Len(t, key.iv, ivLength)

	assert.EqualValues(t, expectedKey.aesKey, key.aesKey)
	assert.EqualValues(t, expectedKey.iv, key.iv)
}

func Test_newSalt(t *testing.T) {
	salt := newSalt()
	assert.Len(t, salt, saltLength)
}
