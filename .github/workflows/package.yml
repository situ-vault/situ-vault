name: Package

on:
  push:
  pull_request:

env:
  GO_VERSION: '1.19.x'

defaults:
  run:
    shell: bash

jobs:

  package-cli:
    name: Package CLI
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        os: [ 'linux', 'darwin', 'windows' ]
        arch: [ 'amd64' ]
        include:
          - os: 'linux'
            arch: 'arm64'
          - os: 'linux'
            arch: '386'
          - os: 'darwin'
            arch: 'arm64'
    steps:

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
          stable: ${{ !contains(env.GO_VERSION, 'rc') }}

      - name: Check out code
        uses: actions/checkout@v3

      - name: Go install
        working-directory: cmd
        run: |
          mkdir -p dist/bin
          env GOOS="$MATRIX_OS" GOARCH="$MATRIX_ARCH" go build -v -o dist/bin ./...
        env:
          MATRIX_OS: ${{ matrix.os }}
          MATRIX_ARCH: ${{ matrix.arch }}

      - name: Create tar for CLI
        working-directory: cmd
        # needed to keep the executable flag
        run: |
          tar -v -c -z -C "dist/bin" -f "dist/$RESULT_TAR_NAME" "."
        env:
          RESULT_TAR_NAME: ${{ format('situ-vault-cli-{0}-{1}.tar.gz', matrix.os, matrix.arch) }}

      - name: Upload CLI dist
        uses: actions/upload-artifact@v3
        with:
          name: ${{ format('situ-vault-cli-{0}-{1}', matrix.os, matrix.arch) }}
          path: ${{ format('cmd/dist/situ-vault-cli-{0}-{1}.tar.gz', matrix.os, matrix.arch) }}
          retention-days: 1


  package-gui:
    name: Package GUI
    runs-on: ${{ matrix.run-on }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # cross-compilation would require more setup, see https://developer.fyne.io/started/cross-compiling
          - os: 'linux'
            arch: 'amd64'
            run-on: 'ubuntu-22.04'
          - os: 'darwin'
            arch: 'amd64'
            run-on: 'macos-12'
          - os: 'windows'
            arch: 'amd64'
            run-on: 'windows-2022'

    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
          stable: ${{ !contains(env.GO_VERSION, 'rc') }}

      - name: Check out code
        uses: actions/checkout@v3

      - name: Install fyne dependency packages
        if: ${{ matrix.os == 'linux' }}
        run: >
          sudo apt-get update -y -qq &&
          sudo apt-get install -y -qq
          libgl1-mesa-dev
          libegl1-mesa-dev
          libgles2-mesa-dev
          xorg-dev

      - name: Install fyne
        run: |
          go install fyne.io/fyne/v2/cmd/fyne@v2.2.4
          fyne version

      - name: Package fyne GUI
        working-directory: gui
        run: |
          fyne package -os="$MATRIX_OS" -name="$APP_NAME" -appID="$APP_ID" -sourceDir="situ-vault"
          ls -lR
        env:
          MATRIX_OS: ${{ matrix.os }}
          APP_ID: "io.github.situ-vault.gui"
          APP_NAME: "situ-vault"

      - name: Create tar for GUI
        working-directory: gui
        # only needed for macos to keep the executable flag
        if: ${{ matrix.os == 'darwin' }}
        run: |
          DIST_FOLDER="."
          tar -v -c -z -C "$DIST_FOLDER" -f "$DIST_FOLDER/situ-vault.app.tar.gz" "situ-vault.app"
        env:
          MATRIX_OS: ${{ matrix.os }}
          MATRIX_ARCH: ${{ matrix.arch }}

      - name: Upload GUI dist
        uses: actions/upload-artifact@v3
        with:
          name: ${{ format('situ-vault-gui-{0}-{1}', matrix.os, matrix.arch) }}
          path: |
            gui/situ-vault.app.tar.gz
            gui/situ-vault.tar.xz
            gui/situ-vault/situ-vault.exe
          retention-days: 1
          if-no-files-found: error
